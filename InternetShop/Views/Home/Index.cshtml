@{
    ViewData["Title"] = "Home Page";
}
<div class="row">
    <div class="col-sm-4">
        <div id="fb-root"></div>
        <script>
        (function (d, s, id) {
                        var js, fjs = d.getElementsByTagName(s)[0];
                        if (d.getElementById(id)) return;
                        js = d.createElement(s); js.id = id;
                        js.src = 'https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v3.2';
                        fjs.parentNode.insertBefore(js, fjs);
                    }(document, 'script', 'facebook-jssdk'));</script>
        <div class="fb-page" data-href="https://www.facebook.com/Super-Shlomo-2146375549014081" data-tabs="timeline" data-width="360" data-height="692.55" data-small-header="false" data-adapt-container-width="false" data-hide-cover="false" data-show-facepile="true"><blockquote cite="https://www.facebook.com/Super-Shlomo-2146375549014081" class="fb-xfbml-parse-ignore"><a href="https://www.facebook.com/Super-Shlomo-2146375549014081">Super Shlomo</a></blockquote></div>
    </div>
    <div class="col-sm-8">
        <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
            <ol class="carousel-indicators">
                <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                <li data-target="#myCarousel" data-slide-to="1"></li>
                <li data-target="#myCarousel" data-slide-to="2"></li>
            </ol>
            <div class="carousel-inner" role="listbox">
                <div class="item active">
                    <img src="~/images/banner.jpg" alt="ASP.NET" class="img-responsive" />
                </div>
                <div class="item">
                    <img src="~/images/banner1.jpg" alt="Visual Studio" class="img-responsive" />
                </div>
                <div class="item">
                    <img src="~/images/banner2.jpg" alt="Package Management" class="img-responsive" />
                </div>
            </div>
            <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
        <div class="video-canvas">
            <video height="100%" width="420" controls>
                <source src="~/video/supermarket.mp4" type="video/mp4">
            </video>
            <canvas id="cartScreenSaver" class="dvd-canvas"></canvas>
        </div>
    </div>
</div>
<script>
    // Adjust the function to the browser
    window.requestAnimFrame =
        window.requestAnimationFrame ||
        window.webkitRequestAnimationFrame ||
        window.mozRequestAnimationFrame ||
        window.oRequestAnimationFrame ||
        window.msRequestAnimationFrame ||
        function (callback) {
            window.setTimeout(callback, 1000 / 30);
        };
    var baseImage = "images/speed_cart_blur_blue.png", imgW = 56, imgH = 37;    

    // Get the canvas HTML DOM object
    var canvas = $("#cartScreenSaver")[0];

    // Canvas context - on wich we will draw
    var ctx = canvas.getContext('2d');
    var canvasW = canvas.width, canvasH = canvas.height;

    // Set the object initial location:
    //  Math.floor will return the largest integer less than or equal to a given number
    //  Math.random will return floating number between 0-1 (inclusive 0 but not 1)
    var imgX = Math.floor(Math.random() * (canvasW - imgW));
    var imgY = Math.floor(Math.random() * (canvasH - imgH));
    var moveX, moveY = 1;

    // Initial direction for the object movement
    var xDir = "right",
        yDir = "up";

    var init = function () {
        // File the rect with background color - 
        // so the object redraw on clean background and won't be redraw over and over again
        ctx.fillStyle = "#ffffff";
        ctx.fillRect(0, 0, canvasW, canvasH);
        ctx.drawImage(base_image, imgX, imgY, imgW, imgH);

        if (xDir == "right") {
            if (imgX >= canvasW - imgW) {
                xDir = "left";
                imgX = imgX - moveX;
            } else {
                imgX = imgX + moveX;
            }
        } else {
            if (imgX <= 0) {
                xDir = "right";
                imgX = imgX + moveX;
            } else {
                imgX = imgX - moveX;
            }
        }
        if (yDir == "down") {
            if (imgY >= canvasH - imgH) {
                yDir = "up";
                imgY = imgY - moveY;
            } else {
                imgY = imgY + moveY;
            }
        } else {
            if (imgY <= 0) {
                yDir = "down";
                imgY = imgY + moveY;
            } else {
                imgY = imgY - moveY;
            }
        }

        requestAnimFrame(init);
    }

    // In case the canvas size was changed
    var reinit = function () {
        canvasW = canvas.width, canvasH = canvas.height;
        // Making sure the object won't go the same path
        (canvasW - imgW === canvasH - imgH) ? moveX = 1.5 : moveX = 1;
    }
    reinit();

    var base_image = new Image();
    base_image.src = baseImage;
    base_image.onload = function () {
        window.addEventListener("resize", reinit);
        init();
    };
</script>
